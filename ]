import h5py as h5
import numpy as np
import other_utils as ou
import my_pycaffe_utils as mpu


class MatConvNet:
	def __init__(self, inFile):
		self.dat_ = h5.File(inFile, 'r')
	
	def ref_to_str(self, ref):
		secRefs = self.dat_['#refs#'][ref][:]
		ch = []
		for sec in secRefs:
			ch.append(ou.ints_to_str(self.dat_['#refs#'][sec][:]))
		return ch

	def make_caffe_layer(self, lNum):
		#Get the name
		nameRef = self.dat_['net']['layers']['name'][lNum][0]
		name    = ou.ints_to_str(self.dat_['#refs#'][nameRef][:])
		#Get the inputs
		ipRef   = self.dat_['net']['layers']['inputs'][lNum][0]
		ipNames = self.ref_to_str(ipRef)
		#Get the parameter names
		pmRef   = self.dat_['net']['layers']['params'][lNum][0]
		pmNames = self.ref_to_str(pmRef) 
		#Get the output names
		opRef   = self.dat_['net']['layers']['outputs'][lNum][0]
		opNames = self.ref_to_str(opRef) 
		#Get the layer type
		tpRef   = self.dat_['net']['layers']['type'][lNum][0]
		lType   = ou.ints_to_str(self.dat_['#refs#'][tpRef][:])
		assert (lType[0:5] == 'dagnn')
				

##
# Convert matconvnet network into a caffemodel
def matconvnet_dag_to_caffemodel(inFile, outFile):
	dat = h5.File(inFile, 'r')
	
